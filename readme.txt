Actions ->

Stores -> Reducer (State Change will be done by reducers
)

immutability -> change state returns new Object

Mutable -> objects, arrays, functions


object.assign({}, state , { role: 'admin})

why immutabale ? clarity, performance, awesome sauce

only reducer change the state -> debuging


Javscript primitives are already immutable;

Object.assign and Spread operator on es6

on es5 -> Loadash merge and Loasdg extend

enfore immutability -> redux immutable state invariant (ext) only in development
programbly -> immutable.js


Reducers

 is a function take action and state as input and get back new state

 one store and multiple Reducers


 container and presentation components
 (smart)       (dumb)
 focus on how things work  focus on how things look
 aware of redux            unware of redux
 subscriobe to redux state    read data from props

 dispacth redux actioins    invoke callback on props
 generated by react-redux  wriiten by hand (stateless comps)


 Connect React to redux
 react-redux used for this

 provider and Connect
 (app to store)   (creates conatiner components);
